DROP TABLE IF EXISTS comment;
DROP TABLE IF EXISTS booking;
DROP TABLE IF EXISTS item;
DROP TABLE IF EXISTS item_request;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS item_request (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description VARCHAR(255) NOT NULL,
    requestor BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,
    CONSTRAINT fk_item_request_user FOREIGN KEY (requestor) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS item (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    status VARCHAR(64) NOT NULL,
    owner BIGINT NOT NULL,
    request BIGINT,
    CONSTRAINT fk_item_user FOREIGN KEY (owner) REFERENCES users (id),
    CONSTRAINT fk_item_request FOREIGN KEY (request) REFERENCES item_request (id),
    CONSTRAINT uq_owner_item_name UNIQUE(owner, name)
);


CREATE TABLE booking (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date_time TIMESTAMP NOT NULL,
    end_date_time TIMESTAMP NOT NULL,
    item BIGINT NOT NULL,
    booker BIGINT NOT NULL,
    status VARCHAR(64) NOT NULL,

    CONSTRAINT fk_booking_item FOREIGN KEY (item) REFERENCES item (id) ON DELETE CASCADE,
    CONSTRAINT fk_booking_booker FOREIGN KEY (booker) REFERENCES users (id) ON DELETE CASCADE
);


CREATE TABLE comment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(1024) NOT NULL,
    item BIGINT NOT NULL,
    author BIGINT NOT NULL,
    created TIMESTAMP NOT NULL,

    CONSTRAINT fk_comment_item FOREIGN KEY (item) REFERENCES item (id) ON DELETE CASCADE,
    CONSTRAINT fk_comment_author FOREIGN KEY (author) REFERENCES users (id) ON DELETE CASCADE
);
